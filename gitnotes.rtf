{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red184\green14\blue61;\red247\green238\blue241;\red0\green0\blue0;
\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c78039\c14510\c30588;\cssrgb\c97647\c94902\c95686;\csgray\c0;
\csgray\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Using Terminal for Communicating with Github\
\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs27 \cf2 \cb3 \expnd0\expndtw0\kerning0
$\'a0ls -l ~,\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 Note: do not type the $, that\'92s just to indicate that there is some kind of code that is going to be run.\
\
Moving from workspace to staging: we have to be able to tell Git that something was changed. Committing the changes stores the changes that you made. Then we can push to a remote repository.\
\
vim new-file, opening up vim with a buffer named new file. :q\
\
Ok, so I created a new directory under the general space:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf4 \cb5 \CocoaLigature0 MacBook-Pro-6:~ Melissa$ mkdir test\
MacBook-Pro-6:~ Melissa$ cd test\
MacBook-Pro-6:test Melissa$ git init \
Initialized empty Git repository in /Users/Melissa/test/.git/\
MacBook-Pro-6:test Melissa$ \
\
\
The git init initializes the folder so that the git system to track everything, then we\'92ll want to put things into the staging area. Once they\'92re staged, we can track all the changes that we make in committing things\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf4 \cb5 MacBook-Pro-6:test Melissa$ touch readme.md\
MacBook-Pro-6:test Melissa$ ls\
git notes.rtf	readme.md\
MacBook-Pro-6:test Melissa$ rm readme.md\
MacBook-Pro-6:test Melissa$ \
MacBook-Pro-6:test Melissa$ git init\
Reinitialized existing Git repository in /Users/Melissa/test/.git/\
MacBook-Pro-6:test Melissa$ \
\
\
\
MacBook-Pro-6:test Melissa$ git add readme.md\
MacBook-Pro-6:test Melissa$ git commit -m "Adding readme.md file"\
[master (root-commit) 5c10af6] Adding readme.md file\
 1 file changed, 0 insertions(+), 0 deletions(-)\
 create mode 100644 readme.md\
\
We have to add it to the staging areas to commit the changes, and then we added some  extra description\
\
$ ls \
shows what\'92s in the file. \
\
Master branch is where your production code is and where your default items are. we are all in the master branch right now.\
\
Here\'92s how we actually commit things/push\
\
we tell it where we want to put things here.\
\
MacBook-Pro-6:test Melissa$ git remote add origin https://github.com/mellowish/test.git\
\
MacBook-Pro-6:test Melissa$ git push -u origin master\
Username for 'https://github.com': mellowish\
Password for 'https://mellowish@github.com': \
\
To add this notes file:\
\
git add gitnotes.rtf\
git commit -m "Adding notes file"\
git push -u origin master\
\
Yay! It worked! \
\
Now we\'92ll make a code folder\
\
mkdir code\
\
touch ./code/data_manage.R # the dot is telling it to stay in the present directory, two dots tells it to stay in the present directory\
\
git status\
\
there is an untracked file within the code folder. it\'92s not tracking the changes. we need to add the file or folder or both\
\
\
git add code\
git add code/data_manage.R\
\
What happened to git status? we want it to be tracking it\
\
git status\
\
start vim, it\'92s a modal editor. you start in normal mode without being able to add text. press a or i.\
esc\
\
\
To get out of vim write :wq\
\
Now that I\'92ve made changes, \
git add readme.md\
git commit -m \'93readme update\'94\
git push origin master\
\
\
\
}